knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library("tidyverse", "rgbif", "sp", "countrycode", "CoordinateCleaner", "data.table", "rgdal", "rgeos")
library(tidyverse, rgbif, sp, countrycode, CoordinateCleaner, data.table, rgdal, rgeos)
library(c(tidyverse, rgbif, sp, countrycode, CoordinateCleaner, data.table, rgdal, rgeos))
##Library
library(tidyverse, rgbif, sp, countrycode, CoordinateCleaner, data.table, rgdal, rgeos)
library()
library()
library()
library()
library()
library()
library(tidyverse)
library(tidyverse)
library(tidyverse)
library(tidyverse)
library(tidyverse)
library(tidyverse)
library(tidyverse)
library(tidyverse)
library(tidyverse)
library(tidyverse)
library(tidyverse)
library(rgbif)
library(sp)
library(countrycode)
library(CoordinateCleaner)
library(data.table)
library(rgdal)
library(rgeos)
library(CoordinateCleaner)
install.packages("CoordinateCleaner")
library(CoordinateCleaner)
library(tidyverse)
library(rgbif)
library(sp)
library(countrycode)
library(CoordinateCleaner)
library(data.table)
library(rgdal)
library(rgeos)
##Library
library(tidyverse)
library(tidyverse)
library(tidyverse)
##Library
##Library
library(tidyverse)
library(rgbif)
library(sp)
library(countrycode)
library(CoordinateCleaner)
install.packages("CoordinateCleaner")
install.packages("vctrs")
install.packages("CoordinateCleaner")
library(CoordinateCleaner)
##search for occurence records and explore data
objectdata<-occ_search(scientificName = "Ceiba pentandra",
return = "data", Limit = "500")
## load library
library(tidyverse)
install.packages("vctrs")
library(rgbif)
library(tidyverse)
library(tidyverse)
install.packages("CoordinateCleaner")
install.packages("vctrs")
library(tidyverse)
install.packages("tidyr")
install.packages("vctrs")
library(rgbif)
##search for occurence records and explore data
objectdata<-occ_search(scientificName = "Ceiba pentandra",
return = "data", Limit = "500")
objectdata<-occ_search(scientificName = "Ceiba pentandra",
return = "data", Limit = "500")
objectdata<-occ_search(scientificName = "Ceiba pentandra",
return = "data")
nrow(objectdata)
nrow(objectdata)
names(objectdata)
plot(objectdata$decimalLatitide~objectdatadecimalLongitude)
plot(objectdata$decimalLatitude~objectdatadecimalLongitude)
plot(objectdata$decimalLatitude~objectdata$decimalLongitude)
tax_key<-name_suggest(q="Ceiba",rank="Genus")
View(tax_key)
lapply(tax_key$key,"occ_count")
##use the suggest function to get gbif taxon key
tax_key<-name_suggest(q="Ceiba",rank="Genus")
tax_key
##becaus there are different key numbers check how many entrys are availabe
lapply(tax_key$key,"occ_count")
tax_key$key[1]
occ_count(tax_key,country = "BR")
occ_count(tax_key,country = "BR")
occ_count(tax_key,country = "BR")
##search for occurence records and explore data
objectdata<-occ_search(scientificName = "Ceiba pentandra",
return = "data", Limit = "500")
study_area<-"POLYGON((-35 -4.5, -38.5 -4.5, -38.5 -7, -35 -7, -35 -4.5))"
datasa<-occ_search(taxonKey = tax_key, return = "data",hasCoordinate = TRUE, geometry = study_area)
tax_key
## load library
library(tidyverse)
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyverse")
install.packages("tidyr")
install.packages("tidyr")
install.packages("tidyr")
install.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
gen_listy<- c("Ceiba","Eriotheca")
tax_keylist <- lapply(gen_list, function(k) {name_suggest(c=k, rank = "Genus")})
gen_list<- c("Ceiba","Eriotheca")
tax_keylist <- lapply(gen_list, function(k) {name_suggest(c=k, rank = "Genus")})
## load library
library(tidyverse)
library(rgbif)
library(rgbif)
library(sp)
library(data.table)
library(rgdal)
library(rgeos)
gen_list<- c("Ceiba","Eriotheca")
tax_keylist <- lapply(gen_list, function(k) {name_suggest(c=k, rank = "Genus")})
View(tax_keylist)
new <- unlist(lapply(tax_keylist,"[[","key"))
##search
data_gel<-occ_search(taxonKey = tax_keylist,return = "data",hasCoordinate = TRUE,limit = 500)
##search
data_gel<-occ_search(taxonKey = tax_keylist,return = "data",hasCoordinate = TRUE,limit = 500,country = "BR")
##search
data_gel<-occ_search(taxonKey = tax_keylist,return = "data",hasCoordinate = TRUE,country = "BR")
gen_list<- c("Ceiba","Eriotheca")
tax_keylist <- lapply(gen_list, function(k) {name_suggest(c=k, rank = "Genus")})
##get all the taxonkeys from list
new <- unlist(lapply(tax_keylist,"[[","key"))
##search
data_gel<-occ_search(taxonKey = tax_keylist,return = "data",hasCoordinate = TRUE,country = "BR")
##search
data_gel<-occ_search(taxonKey = new,return = "data",hasCoordinate = TRUE,country = "BR")
View(data_gel)
data_final<-lapply(data_gel,"as.data.frame")
data_final<-lapply(data_gel,"as.data.frame")
a <- bind_rows(data_final)
a <- bind_rows(data_final)
a <- bind_rows(data_final)
write.csv(data_final,"gbif_occ.csv")
